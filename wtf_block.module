<?php
/**
 * @file
 * Logic for the module functionality.
 */

/**
 * Implements hook_menu().
 */
function wtf_block_menu() {
  $items['admin/config/administration/wtf'] = array(
    'title' => 'WTF Block Configuration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('wtf_block_config_form'),
    'access arguments' => array('administer wtf_block'),
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function wtf_block_permission() {
  return array(
    'administer wtf_block' => array(
      'title' => t('Administer WTF Block'),
      'description' => t('Configure WTF Block region settings. Warning: Give to trusted roles only; this permission has security implications.'),
    ),
  );
}

/**
 * Returns the render array for the wtf_block form.
 */
function wtf_block_config_form($form, &$form_state) {
  global $theme_key;
  module_load_include('inc', 'block', 'block.admin');
  //Get default and admin themes, and previously stored configurations
  $default_theme = variable_get('theme_default');
  $admin_theme = variable_get('admin_theme');
  $current_config = variable_get('wtf_block_region');
  $current_config_blocks = variable_get('wtf_block_whitelist', array());
  //Create a container to wrap all the region inputs, so we have a submit value ready to be sent to db without processing
  $form['container'] = array(
    '#type' => 'container',
    '#tree' => TRUE,
  );
  //Region selection inputs for each theme
  foreach (list_themes() as $theme_key => $theme_info) {
    $is_default = $theme_key == $default_theme;
    $is_admin = $theme_key == $admin_theme;
    $form['container']['region_' . $theme_key] = array(
      '#type' => 'select',
      '#title' => $theme_info->info['name'] . ($is_default ? ' (Default)' : ($is_admin ? ' (Administrative)' : '')),
      '#options' => array_merge(array('0' => 'No region'), system_region_list($theme_key)) ,
      '#default_value' => isset($current_config['region_' . $theme_key]) ? $current_config['region_' . $theme_key] : 0,
      '#weight' => $is_default ? -1 : (int)!$is_admin,
    );
  }

  //Get all existent blocks
  //TODO: Make this a configuration per theme too. 
  $blocks = block_admin_display_prepare_blocks($default_theme);
  foreach ($blocks as $block) {
    $blocks_info[$block['bid']] = $block['info'];
  }
  $form['whitelist'] = array(
    '#type' => 'fieldset', 
    '#title' => t('Whitelist (BETA)'), 
    '#description' => t('Blocks that can bypass the WTF configuration. Currently only works for the current theme (Wait to see the next version!!). If you change themes you will have to come here again, although configuration for previously disabled themes is available once they are enabled again.'), 
    '#collapsible' => TRUE, 
    '#collapsed' => TRUE,
  );
  //Block checkboxes
  $form['whitelist']['blocks'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Choose:'),
    '#options' => $blocks_info,
    '#default_value' => $current_config_blocks,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
  );
  return $form;
}

/**
 * Submission handler for the wtf_block_config_form form.
 */
function wtf_block_config_form_submit($form, &$form_state) {
  //We don't need to do anything extra thanks to the way the form fields are built, just store
  variable_set('wtf_block_region', $form_state['values']['container']);
  variable_set('wtf_block_whitelist', $form_state['values']['blocks']);
}

/**
 * Implements hook_block_list_alter().
 */
function wtf_block_block_list_alter(&$blocks) {
  global $theme;
  //Load configuration
  $current_config = variable_get('wtf_block_region');
  $current_config_blocks = variable_get('wtf_block_whitelist');
  //Check if we have block transference enabled for this theme
  if (!empty($current_config['region_' . $theme])) {
    //Iterate over the blocks that are about to be rendered
    foreach ($blocks as $block) {
      //Skip the main content block or any other specified in the whitelist
      if ($block->delta != 'main' && empty($current_config_blocks[$block->bid])) {
        //Change region
        $block->region = $current_config['region_' . $theme];
      }
    }
  }
}
